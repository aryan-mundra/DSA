// Nearest smaller element

//Approach 1
public class Solution {
    public ArrayList<Integer> prevSmaller(ArrayList<Integer> A) {
        ArrayList<Integer> finalAns = new ArrayList<>();
        finalAns.add(-1);  // for the first element as there is no previous element
        
        for (int i = 1; i < A.size(); i++) {
            int ele = A.get(i);
            int ans = -1;  // Initialize to -1 for each element
            
            // Find the previous smaller element
            for (int j = i - 1; j >= 0; j--) {
                if (A.get(j) < ele) {
                    ans = A.get(j);
                    break;  // Exit the loop once the first smaller element is found
                }
            }
            
            finalAns.add(ans);
        }
        
        return finalAns;
    }
}




//Approach 2(Using Stack)
public class Solution {
    public ArrayList<Integer> prevSmaller(ArrayList<Integer> A) {
        ArrayList<Integer> finalAns = new ArrayList<>();        
        Stack<Integer> st = new Stack<>();
        
        for(int i=0;i<A.size();i++){
            while(!st.isEmpty() && st.peek()>=A.get(i)){
                st.pop();
            }
            int ans = st.isEmpty() ? -1:st.peek();
            finalAns.add(ans);
            
            st.push(A.get(i));
        }
        
        return finalAns;
    }
}


//InterviewBit link: https://www.interviewbit.com/problems/nearest-smaller-element/
//Youtube link: https://www.youtube.com/watch?v=zMdbdGJNlh4
