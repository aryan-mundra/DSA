//Using binary search

class Solution {
    public static int searchInsert(int[] nums, int target) {
    int low = 0;
    int high = nums.length - 1;

    while(low<=high){
        int mid = (low+high)/2;

        if(nums[mid] == target){
            return mid;
        }
        else if(nums[mid]< target){
            low = mid +1;
        }
        else{
            high = mid -1;
        }
    }
    return low;
    }

public static void main(String[] args){
   int[] arr = {1,3,5,8};
   int target = 4;
   int indexPosition = searchInsert(arr,target);
   System.out.print("The element "+ target + " should be inserted at " + indexPosition + " position");
}
}




















// USING LOWER BOUND lOGIC


class Solution {
    public int searchInsert(int[] nums, int target) {
    int low = 0;
    int n = nums.length;
    int high = n - 1;
    int ans = n;

    while(low<=high){
        int mid = (low+high)/2;
        if(nums[mid] >= target){
            ans = mid;
            high = mid -1;
        }
        else{
            low = mid +1;
        }
    }
    return ans; 
    }
}