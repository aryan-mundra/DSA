// Leaders in an Array

//Brute force solution
class Solution {
    // Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int n, int arr[]) {
        
        ArrayList<Integer> abc = new ArrayList<Integer>();
        
        
        for(int i=0;i<n;i++){
            boolean leader = true;
            for(int j=i+1;j<n;j++){
                
                if(arr[j]>arr[i]){
                    leader = false;
                    break;
                }
            }
            if(leader==true){
            abc.add(arr[i]);
            }
        }
        
        return abc;
        
    }
}









//Optimal solution

class Solution {
    // Function to find the leaders in the array.
    static ArrayList<Integer> leaders(int n, int arr[]) {
        ArrayList<Integer> abc = new ArrayList<>();
        
        int max = Integer.MIN_VALUE;
        
        for(int i=n-1;i>=0;i--){
            if(arr[i]>=max){  // did >= sign as suppose if array is [1,3,3,3]
                              // then according to the output cases all the [3,3,3] should come in solution
                max = arr[i];
                abc.add(max);
            }
        }
        
        
        Collections.reverse(abc); // we reversed as they were expecting in this format
        
        return abc;
    }
}











